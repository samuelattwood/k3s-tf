#!/bin/bash

node_wait() {
  while true; do
    NODE_STATUS=$(kubectl get no --no-headers |awk '{ print $2 }' |sort -u)
    if [[ $NODE_STATUS != "Ready" ]]; then
      echo "Waiting for all nodes to enter ready state..."
      sleep 10
      NODE_STATUS=$(kubectl get no --no-headers |awk '{ print $2 }' |sort -u)
    else
      break
    fi
  done
}

deploy_wait() {
  while true; do
    if kubectl get po -A |grep -v ^NAMESPACE |grep -v 'Running\|Completed'; then
      echo "Waiting for all pods to enter running state..."
      sleep 10
    else
      break
    fi
  done
}


curl -L -o k3s.sh https://get.k3s.io
chmod +x k3s.sh

if [[ "${node_type}" == "server" ]]; then
  INSTANCE=$(curl -s http://169.254.169.254/latest/meta-data/tags/instance/ServerInstance)
  if [[ $INSTANCE == "0" ]]; then
    K3S_TOKEN=${k3s_token} INSTALL_K3S_EXEC="--tls-san '${server_url}' --cluster-init" ./k3s.sh
    export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    node_wait
    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    chmod +x get_helm.sh
    ./get_helm.sh
    rm -f get_helm.sh
    helm repo add jetstack https://charts.jetstack.io
    helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
    helm repo update
    deploy_wait
    helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version ${cert_manager_version} --set installCRDs=true
    deploy_wait
    cat <<EOF | kubectl apply -f -
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-api-key-secret
  namespace: cert-manager
type: Opaque
stringData:
  api-key: ${cloudflare_api_key}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  namespace: cert-manager
spec:
  acme:
    #server: https://acme-v02.api.letsencrypt.org/directory
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: ${cert_manager_email}
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
        - dns01:
            cloudflare:
              email: ${cloudflare_account_email}
              apiKeySecretRef:
                name: cloudflare-api-key-secret
                key: api-key
EOF
    deploy_wait
    helm install rancher rancher-latest/rancher --namespace cattle-system --create-namespace \
                                                                          --set bootstrapPassword="${bootstrap_password}" \
                                                                          --set hostname=${rancher_url} \
                                                                          --set replicas=3 \
                                                                          --set ingress.tls.source="letsEncrypt" \
                                                                          --set letsEncrypt.email="${cert_manager_email}" \
                                                                          --set letsEncrypt.ingress.class="traefik"
  else
    K3S_TOKEN=${k3s_token} INSTALL_K3S_EXEC="server --server https://${server_url}:6443" ./k3s.sh
  fi
else
  K3S_TOKEN=${k3s_token} K3S_URL=https://${server_url}:6443 ./k3s.sh
fi
